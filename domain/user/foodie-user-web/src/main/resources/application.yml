############################################################
#
# 内置 tomcat 配置
#
############################################################
server:
  port: 8088
  tomcat:
    uri-encoding: utf-8
  max-http-header-size: 80KB

############################################################
#
# 配置数据源信息
#
############################################################
spring:
  profiles:
    active: dev
  datasource:
    type: com.zaxxer.hikari.HikariDataSource                # 数据源类型：HikariCP
    driver-class-name: com.mysql.cj.jdbc.Driver             # 数据源的相关配置
    url: jdbc:mysql://localhost:3306/foodie-shop-dev?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
    username: root
    password: root
    hikari:
      connection-timeout: 30000       # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQ
      minimum-idle: 5                 # 最小连接数
      maximum-pool-size: 20           # 最大连接数
      auto-commit: true               # 自动提交
      idle-timeout: 600000            # 连接超时的最大时长（毫秒），超时则被释放（retired），默认:10分钟
      pool-name: DateSourceHikariCP   # 连接池名字
      max-lifetime: 1800000           # 连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认:30分钟
      connection-test-query: SELECT 1
  servlet:
    multipart:
      max-file-size: 512000     # 文件上传大小限制为 500kb
      max-request-size: 512000  # 请求大小限制为 500kb
  # rabbit mq 配置
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    stream:
      bindings:
        force-logout-consumer:
          destination: force-logout-topic
          group: force-logout-group
          consumer:
            maxAttempts: 2
        force-logout-producer:
          destination: force-logout-topic

############################################################
#
# mybatis 配置
# ! 注意更改路径
############################################################
mybatis:
  type-aliases-package: cn.mrcode.user.pojo    # 实体层
  mapper-locations: classpath:mapper/*.xml          # mapper 层

# 通用 Mapper 配置
mapper:
  # 指定要扫描的 mapper 接口
  mappers: cn.mrcode.my.mapper.MyMapper
  # 在进行数据库操作的时候，判断表达式  username != null, 是否追加 username != ''
  # 这里关闭了追加，自己手写
  not-empty: false
  identity: MYSQL

# 分页插件配置
pagehelper:
  helperDialect: mysql
  supportMethodsArguments: true

management:
  endpoints:
    web:
      exposure:
        # 暴露接口
        # include: "*"  # 可以采用这种方式暴露所有的端口
        include:
          # actuator 会暴露 /actuator/hystrix.stream 端口
          # 通过这个地址可以获取到 Hystrix 指标流
          - hystrix.stream
  endpoint:
    health:
      show-details: always

hystrix:
  command:
    # 全局默认配置
    default:
      fallback:
        # 是否开启服务降级
        enabled: true
      circuitBreaker:
        # === 下面的参数不是特别重要的，是一些开关参数
        # 开启熔断器，默认也是开启
        enabled: true
        # 强制开启熔断器
        forceOpen: false
        # 强制关闭熔断器
        forceClosed: false

        # === 影响到熔断器判定之类的重要参数
        # 熔断的前提条件(请求数量)，在一定的时间窗口内，请求达到 n 个以后，才会进入熔断判断
        requestVolumeThreshold: 5
        # 超过百分之 50 的失败请求，则熔断开关开启
        # 真实业务中会设置的低一点，比如 35%
        errorThresholdPercentage: 50
        # 在 n 毫秒后，将熔断器状态变成 半开状态，一般会小于时间窗口
        sleepWindowInMilliseconds: 15000
      # 执行
      execution:
        # 执行超时开启
        timeout:
          enabled: true
        # 隔离
        isolation:
          # 线程
          thread:
            # 超时毫秒
            timeoutInMilliseconds: 10000
            # 超时以后终止线程
            interrupOnTimeout: true
            # 此属性指示 HystrixCommand.run() 发生取消时是否应中断执行。
            interruptOnCancel: true
      # === 影响到熔断器判定之类的重要参数
      # metrics 就是统计指标
      metrics:
        rollingStats:
          # 以  20 秒作为一个时间统计窗口
          timeInMilliseconds: 20000
          # 滑动窗口个数，最好被上面的时间窗口整除
          # numBuckets: 10
        # 百分位计数
        rollingPercentile:
          timeInMilliseconds: 20000
          bucketSize: 300
    # 针对某个业务配置
    loginFail:
      execution:
        isolation:
          thread:
            # 覆盖默认配置中的超时时间为 3000 毫秒
            timeoutInMilliseconds: 3000
